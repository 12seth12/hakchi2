<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AreYouSure" xml:space="preserve">
    <value>Вы уверены?</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="blank" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\images\blank.jpg;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="BuildingCustom" xml:space="preserve">
    <value>Патчим ядро...</value>
  </data>
  <data name="Congratulations" xml:space="preserve">
    <value>Поздравляем!</value>
  </data>
  <data name="CustomKernelQ" xml:space="preserve">
    <value>Хотите прошить модифицированный образ ядра?</value>
  </data>
  <data name="CustomWarning" xml:space="preserve">
    <value>Теперь необходимо установить модифицированное ядро на NES Mini. Эту процедуру тоже нужно выполнить только один раз. Продолжить?</value>
  </data>
  <data name="Default30games" xml:space="preserve">
    <value>Оригинальные 30 игр</value>
  </data>
  <data name="DeleteQ" xml:space="preserve">
    <value>Удалить {0}?</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Готово!</value>
  </data>
  <data name="DoneUploaded" xml:space="preserve">
    <value>Готово! Подождите, пока не потухнет светодиод, и перезапустите NES Mini.</value>
  </data>
  <data name="DoneYouCanUpload" xml:space="preserve">
    <value>Готово! Теперь можно закачивать свои игры в NES Mini.</value>
  </data>
  <data name="DoYouWantCancel" xml:space="preserve">
    <value>Хотите отменить текущую операцию?</value>
  </data>
  <data name="DoYouWantToContinue" xml:space="preserve">
    <value>Продолжить?</value>
  </data>
  <data name="DumpingKernel" xml:space="preserve">
    <value>Читаем образ ядра...</value>
  </data>
  <data name="DumpKernelQ" xml:space="preserve">
    <value>Сдампить образ ядра NES Mini?</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Ошибка</value>
  </data>
  <data name="ExecutingCommand" xml:space="preserve">
    <value>Выполняем команду:</value>
  </data>
  <data name="ExecutingFel1" xml:space="preserve">
    <value>Запускаем fes1...</value>
  </data>
  <data name="fes1" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\data\fes1.bin;System.Byte[], mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="FlasingCustom" xml:space="preserve">
    <value>Прошиваем модифицированное ядро...</value>
  </data>
  <data name="FlasingOriginal" xml:space="preserve">
    <value>Прошиваем оригинальное ядро...</value>
  </data>
  <data name="GamesSelected" xml:space="preserve">
    <value>игр(ы) выбрано</value>
  </data>
  <data name="InvalidKernelHeader" xml:space="preserve">
    <value>Некорректный заголовок образа ядра.</value>
  </data>
  <data name="InvalidKernelSize" xml:space="preserve">
    <value>Некорректный размер ядра:</value>
  </data>
  <data name="MD5Failed" xml:space="preserve">
    <value>Образ ядра сдамплен, но MD5 некорректный:</value>
  </data>
  <data name="MD5Failed2" xml:space="preserve">
    <value>Возможно, ядро уже модифицировано, или нам ещё неизвестна такая версия. Отправьте это сообщение автору программы (нажмите Ctrl+C). Прожолжайте на свой страх и риск.</value>
  </data>
  <data name="NoKernel" xml:space="preserve">
    <value>Не найден образ ядра</value>
  </data>
  <data name="NoKernelWarning" xml:space="preserve">
    <value>Прежде всего, необходимо сдампить образ ядра NES Mini. Эту процедуру нужно проделать только один раз. Продолжить?</value>
  </data>
  <data name="NoKernelYouNeed" xml:space="preserve">
    <value>Не найден образ ядра NES Mini. Сначала необходимо его сдампить.</value>
  </data>
  <data name="OriginalKernelQ" xml:space="preserve">
    <value>Прошить оригинальный образ ядра?</value>
  </data>
  <data name="PleaseTryAgain" xml:space="preserve">
    <value>Пожалуйста, попробуйте снова.</value>
  </data>
  <data name="PressOkToContinue" xml:space="preserve">
    <value>Нажмите OK для продолжения.</value>
  </data>
  <data name="ReplaceKernelQ" xml:space="preserve">
    <value>Уже существует сохранённый образ ядра. Если вы ДЕЙСТВИТЕЛЬНО хотите заменить оригинальную копию ядра и ДЕЙСТВИТЕЛЬНО понимаете, что делаете, удалите папку "dump" вручную.</value>
  </data>
  <data name="SelectAtLeast" xml:space="preserve">
    <value>Необходимо выбрать хотя бы одну игру.</value>
  </data>
  <data name="uboot" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\data\uboot.bin;System.Byte[], mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="UploadingFes1" xml:space="preserve">
    <value>Загружаем и выполняем fes1...</value>
  </data>
  <data name="UploadingGames" xml:space="preserve">
    <value>Загружаем игры...</value>
  </data>
  <data name="UploadingKernel" xml:space="preserve">
    <value>Загружаем образ ядра...</value>
  </data>
  <data name="VerifyFailed" xml:space="preserve">
    <value>Проверка закончилась неуспешно. Это плохо :o</value>
  </data>
  <data name="Verifying" xml:space="preserve">
    <value>Проверяем...</value>
  </data>
  <data name="WaitingForDevice" xml:space="preserve">
    <value>Ожидаем устройство...</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Внимание!</value>
  </data>
  <data name="Wow" xml:space="preserve">
    <value>Ура</value>
  </data>
  <data name="CustomKernel" xml:space="preserve">
    <value>Модифицированное ядро</value>
  </data>
  <data name="MapperNotSupported" xml:space="preserve">
    <value>Увы, {0} использует маппер #{1}, а NES Mini его вроде как не поддерживает, и игра скорее всего не запустится. Всё равно добавить?</value>
  </data>
  <data name="ManyGames" xml:space="preserve">
    <value>Говорят, что NES Mini может выдержать только 97 игр, а у вас их {0}. Продолжить?</value>
  </data>
  <data name="PleaseTryAgainUSB" xml:space="preserve">
    <value>Если проблема повторяется, попробуйте другой USB порт или другой USB кабель.</value>
  </data>
  <data name="XpZadig" xml:space="preserve">
    <value>Пожалуйста, используйте утилиту "Zadig", чтобы установить драйвер на Windows XP/2000.</value>
  </data>
  <data name="Donate" xml:space="preserve">
    <value />
  </data>
  <data name="FirstRun" xml:space="preserve">
    <value>Привет! Я очень рад, что вы пользуетесь моей программой. Её очень просто использовать: нажмите кнопку "Добавить игр", выберите ROMы, затем жмите "Синхронизировать" и следуйте инструкциям. Удачи!</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Привет!</value>
  </data>
  <data name="KernelDumped" xml:space="preserve">
    <value>Оригинальный образ ядра сохранён в папке "dump". Желательно его не потерять и не стереть.</value>
  </data>
</root>